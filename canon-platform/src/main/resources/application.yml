server:
    port: 8081
    name: platform-service


# 启用调试日志。
debug: false


# 启用跟踪日志。
trace: false


canon:
    mybatisBasePackage: com.*.dao



# 日志
logging:
    config:
        classpath: logback.xml
    file: property.log
    file.max-size: 10MB
    path: /var/log


# 使用thymeleaf模板
spring:
    application:
        name: platform-service #应用名称
    # druid
    datasource:
        #   数据源基本配置
        username: aptbu
        password: aptbu_dev
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.16.42:3315/aptbu?useUnicode=true&characterEncoding=utf-8&rewriteBatchedStatements=true
        type: com.alibaba.druid.pool.DruidDataSource
        #   数据源其他配置
        initialSize: 5
        minIdle: 5
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: true # 检查连接是否有效,会降低性能
        testOnReturn: false # 归还检查连接是否有效,会降低性能
        poolPreparedStatements: true
        keepAlive: false
        #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        maxPoolPreparedStatementPerConnectionSize: 50
        useGlobalDataSourceStat: true
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

    #jpa 配置
    jpa:
        # 配置 DBMS 类型
        database: MYSQL
        # 配置是否将执行的 SQL 输出到日志
        show-sql: true
#        properties:
#            hibernate:
#                hbm2ddl:
#                    # 配置开启自动更新表结构
#                    auto: update
mybatis:
    configuration:
        # 下划线转驼峰
        map-underscore-to-camel-case: true
        logPrefix: mybatisLogger.
        # logImpl: org.apache.ibatis.logging.stdout.StdOutImpl
        # aggressiveLazyLoading: true
    mapper-locations: classpath:mapper/*.xml
    type-aliases-package: com.canon.model
    # type-handlers-package: org.apache.ibatis.type


# spring-could
eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
    instance:
        preferIpAddress: true # 采用IP注册
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}  # 定义实例ID格式


